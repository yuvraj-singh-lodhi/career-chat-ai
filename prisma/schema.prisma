generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model messages {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  session_id String    @db.Uuid
  user_id    String?   @db.Uuid
  role       String    @db.VarChar(20)
  content    String
  created_at DateTime? @default(now()) @db.Timestamp(6)
  sessions   sessions  @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_message_session")
  users      users?    @relation(fields: [user_id], references: [id], onUpdate: NoAction, map: "fk_message_user")

  @@index([session_id], map: "idx_messages_session")
  @@index([user_id], map: "idx_messages_user")
}

model sessions {
  id         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title      String     @db.VarChar(255)
  user_id    String     @db.Uuid
  created_at DateTime?  @default(now()) @db.Timestamp(6)
  updated_at DateTime?  @default(now()) @db.Timestamp(6)
  messages   messages[]
  users      users      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_session_user")

  @@index([user_id], map: "idx_sessions_user")
}

model users {
  id         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String?    @db.VarChar(100)
  email      String     @unique @db.VarChar(150)
  image      String?
  created_at DateTime?  @default(now()) @db.Timestamp(6)
  updated_at DateTime?  @default(now()) @db.Timestamp(6)
  messages   messages[]
  sessions   sessions[]
}
